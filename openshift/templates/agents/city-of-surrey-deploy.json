{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "annotations": {
      "description": "Deployment template for a ${NAME} instance.",
      "tags": "${NAME}"
    },
    "name": "${NAME}-deployment-template"
  },
  "objects": [
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${WALLET_CREDENTIAL_STORE_NAME}",
        "labels": {
          "app": "agents",
          "name": "${NAME}",
          "app-group": "${APP_GROUP}"
        }
      },
      "data": {
        "key": "${WALLET_ENCRYPTION_KEY}",
        "seed": "${INDY_WALLET_SEED}",
        "did": "${INDY_WALLET_DID}"
      },
      "type": "Opaque"
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "agents",
          "name": "${NAME}",
          "app-group": "${APP_GROUP}"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "8080-tcp",
            "protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "services",
          "name": "${NAME}",
          "app-group": "${APP_GROUP}"
        }
      },
      "spec": {
        "host": "${ENDPOINT_URL}",
        "tls": {
          "insecureEdgeTerminationPolicy": "Redirect",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "agents",
          "name": "${NAME}",
          "app-group": "${APP_GROUP}"
        },
        "annotations": {
          "description": "Defines how to deploy the container."
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "agent:${TAG_NAME}"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "${NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${NAME}"
                }
              }
            ],
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "APPLICATION_URL",
                    "value": "${APPLICATION_URL}"
                  },
                  {
                    "name": "CONFIG_ROOT",
                    "value": "${CONFIG_ROOT}"
                  },
                  {
                    "name": "HOST_PORT",
                    "value": "${HOST_PORT}"
                  },
                  {
                    "name": "ENVIRONMENT",
                    "value": "${ENVIRONMENT}"
                  },
                  {
                    "name": "GENESIS_URL",
                    "value": "${GENESIS_URL}"
                  },
                  {
                    "name": "INDY_LEDGER_URL",
                    "value": "${INDY_LEDGER_URL}"
                  },
                  {
                    "name": "LEDGER_PROTOCOL_VERSION",
                    "value": "${LEDGER_PROTOCOL_VERSION}"
                  },
                  {
                    "name": "AUTO_REGISTER_DID",
                    "value": "${AUTO_REGISTER_DID}"
                  },
                  {
                    "name": "LOG_LEVEL",
                    "value": "${LOG_LEVEL}"
                  },
                  {
                    "name": "PYTHON_ENV",
                    "value": "${PYTHON_ENV}"
                  },
                  {
                    "name": "TOB_API_URL",
                    "value": "${TOB_API_URL}"
                  },
                  {
                    "name": "TOB_APP_URL",
                    "value": "${TOB_APP_URL}"
                  },
                  {
                    "name": "INDY_WALLET_TYPE",
                    "value": "${INDY_WALLET_TYPE}"
                  },
                  {
                    "name": "POSTGRESQL_WALLET_HOST",
                    "value": "${POSTGRESQL_WALLET_HOST}"
                  },
                  {
                    "name": "POSTGRESQL_WALLET_PORT",
                    "value": "${POSTGRESQL_WALLET_PORT}"
                  },
                  {
                    "name": "POSTGRESQL_WALLET_NAME",
                    "value": "${POSTGRESQL_WALLET_NAME}"
                  },
                  {
                    "name": "POSTGRESQL_WALLET_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${POSTGRESQL_WALLET_HOST}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_WALLET_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${POSTGRESQL_WALLET_HOST}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_WALLET_ADMIN_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${POSTGRESQL_WALLET_HOST}",
                        "key": "admin-password"
                      }
                    }
                  },
                  {
                    "name": "WALLET_ENCRYPTION_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${WALLET_CREDENTIAL_STORE_NAME}",
                        "key": "key"
                      }
                    }
                  },
                  {
                    "name": "INDY_WALLET_SEED",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${WALLET_CREDENTIAL_STORE_NAME}",
                        "key": "seed"
                      }
                    }
                  },
                  {
                    "name": "ISSUER_WALLET_DID",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${WALLET_CREDENTIAL_STORE_NAME}",
                        "key": "did"
                      }
                    }
                  },
                  {
                    "name": "ENDPOINT_URL",
                    "value": "${ENDPOINT_URL}"
                  },
                  {
                    "name": "TCP_SOCKET_FAMILY",
                    "value": "${TCP_SOCKET_FAMILY}"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 30,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 30,
                  "initialDelaySeconds": 300,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                },
                "volumeMounts": []
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the objects defined in this template.",
      "required": true,
      "value": "city-of-surrey"
    },
    {
      "name": "APP_GROUP",
      "displayName": "App Group",
      "description": "The name assigned to all of the deployments in this project.",
      "required": true,
      "value": "greenlight-demo"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "required": true,
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "value": "devex-von-permitify-tools"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "dev"
    },
    {
      "name": "APPLICATION_URL",
      "displayName": "Application Url",
      "description": "The application URL.",
      "required": true,
      "value": "https://dev-greenlight.orgbook.gov.bc.ca"
    },
    {
      "name": "ENDPOINT_URL",
      "displayName": "Endpoint URL",
      "description": "The public domain endpoint for the agent, which is registered on the ledger.",
      "required": true,
      "value": "https://city-of-surrey-dev-greenlight.pathfinder.gov.bc.ca"
    },
    {
      "name": "TCP_SOCKET_FAMILY",
      "displayName": "TCP Socket Family",
      "description": "The TCP socket version to be used by the agent DNS resolver.",
      "required": true,
      "value": "IPV4"
    },
    {
      "name": "CONFIG_ROOT",
      "displayName": "Config Root",
      "description": "The root directory containing the application configuration.",
      "required": true,
      "value": "../config/city-surrey-agent"
    },
    {
      "name": "HOST_PORT",
      "displayName": "Host Port",
      "description": "The port on which the agent service will listen.",
      "required": true,
      "value": "8080"
    },
    {
      "name": "ENVIRONMENT",
      "displayName": "Environment",
      "description": "The application environment.",
      "required": true,
      "value": "default"
    },
    {
      "name": "GENESIS_URL",
      "displayName": "Genesis Url",
      "description": "URL for downloading a copy of the genesis file defining the ledger connection for the environment.  Used when connecting the the Sovrin Ledger.",
      "required": false,
      "value": ""
    },
    {
      "name": "INDY_LEDGER_URL",
      "displayName": "Indy Ledger URL",
      "description": "URL for a running instance of the von-network.  Used when connecting to the BCovrin Ledger.",
      "required": false,
      "value": "http://dev.greenlight.bcovrin.vonx.io"
    },
    {
      "name": "LEDGER_PROTOCOL_VERSION",
      "displayName": "Ledger Protocol Version",
      "description": "Used to specify the protocol version for the ledger.  Defaults if left blank.",
      "required": false,
      "value": ""
    },
    {
      "name": "AUTO_REGISTER_DID",
      "displayName": "Auto Register DID",
      "description": "Flag to indicate whether or not to auto-register with the ledger.  Only works with the BCovrin, which has an endpoint for self registration.",
      "required": false,
      "value": "1"
    },
    {
      "name": "LOG_LEVEL",
      "displayName": "Log Level",
      "description": "Sets the desired level of logging. See https://docs.python.org/3/howto/logging.html",
      "required": false,
      "value": "INFO"
    },
    {
      "name": "PYTHON_ENV",
      "displayName": "Python Environment",
      "description": "Python Environment.",
      "required": true,
      "value": "development"
    },
    {
      "name": "TOB_API_URL",
      "displayName": "TOB API URL",
      "description": "The URL of the TOB API.",
      "required": true,
      "value": "https://dev-demo-api.orgbook.gov.bc.ca/api/v2"
    },
    {
      "name": "TOB_APP_URL",
      "displayName": "TOB Application URL",
      "description": "The URL of the TOB application.",
      "required": true,
      "value": "https://dev-demo.orgbook.gov.bc.ca"
    },
    {
      "name": "INDY_WALLET_TYPE",
      "displayName": "Wallet Storage Type",
      "description": "The wallet storage type.  Your choice of 'postgres' or 'sqlite' at the moment.  If not defined, defaults to 'sqlite' for compatibility",
      "required": false,
      "value": "postgres_storage"
    },
    {
      "name": "POSTGRESQL_WALLET_HOST",
      "displayName": "PostgreSql Wallet Hostname",
      "required": true,
      "description": "Hostname of the deployed database hosting the wallet.  Only used when INDY_WALLET_TYPE = postgres_storage_storage.",
      "value": "wallet-db"
    },
    {
      "name": "POSTGRESQL_WALLET_PORT",
      "displayName": "PostgreSql Wallet Port",
      "required": true,
      "description": "The port number of the deployed database hosting the wallet.  Only used when INDY_WALLET_TYPE = postgres_storage_storage.",
      "value": "5432"
    },
    {
      "name": "POSTGRESQL_WALLET_NAME",
      "displayName": "PostgreSql Wallet Name",
      "required": true,
      "description": "The name of the deployed database hosting the wallet.  Only used when INDY_WALLET_TYPE = postgres_storage_storage.",
      "value": "city_of_surrey_issuer"
    },
    {
      "name": "WALLET_ENCRYPTION_KEY",
      "displayName": "Wallet Encryption Key",
      "description": "The encryption key to be used for the wallets.  Needs to be basee64 encoded.",
      "required": true,
      "generate": "expression",
      "from": "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
    },
    {
      "name": "INDY_WALLET_SEED",
      "displayName": "Indy Wallet Seed",
      "description": "The Seed used for the Indy wallet.  Needs to be basee64 encoded.",
      "required": true,
      "generate": "expression",
      "from": "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
    },
    {
      "name": "INDY_WALLET_DID",
      "displayName": "Indy Wallet DID",
      "description": "The DID associated to the Indy wallet.  Needs to be basee64 encoded.",
      "required": false,
      "generate": "expression",
      "from": "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
    },
    {
      "name": "WALLET_CREDENTIAL_STORE_NAME",
      "displayName": "Wallet Credential Store Name",
      "description": "The name of the wallet credential store (aka The name of the secret that contains the wallet credentials).",
      "required": true,
      "value": "city-of-surrey-wallet-credentials"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "Resources CPU Limit",
      "description": "The resources CPU limit (in cores) for this build.",
      "required": true,
      "value": "250m"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Resources Memory Limit",
      "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "256Mi"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "Resources CPU Request",
      "description": "The resources CPU request (in cores) for this build.",
      "required": true,
      "value": "10m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Resources Memory Request",
      "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "64Mi"
    }
  ]
}
